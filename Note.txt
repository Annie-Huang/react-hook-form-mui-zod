React Hook Form Course for Beginners (inc. Zod + Material UI)
(https://www.youtube.com/watch?v=JyeWoqWsQFo)

https://github.com/codegenixdev/react-hook-form-mui-zod-boilerplate
https://github.com/Annie-Huang/react-hook-form-mui-zod

https://mui.com/material-ui/react-autocomplete/
--------------------------------------------------------------------------
PS C:\react\react-hook-form-mui-zod> npm create vite .
Need to install the following packages:
create-vite@5.5.2
Ok to proceed? (y) y


> npx
> create-vite .

√ Current directory is not empty. Please choose how to proceed: » Ignore files and continue
√ Select a framework: » React
√ Select a variant: » TypeScript + SWC

Scaffolding project in C:\react\react-hook-form-mui-zod...

Done. Now run:

  npm install
  npm run dev

PS C:\react\react-hook-form-mui-zod>

--------------------------------------------------------------------------

PS C:\react\react-hook-form-mui-zod> npm install @emotion/react @emotion/styled @mui/material @mui/icons-material @mui/x-date-pickers @mui/x-date-pickers-pro date-fns@3.2 react-hook-form zod @hookform/resolvers @tanstack/react-query axios lodash
Note:
    - In order to use zod with react-hook-form, we need to install @hookform/resolvers
    - Need to install date-fns@3.2. Otherwise, it will note work with @mui/x-date-pickers @mui/x-date-pickers-pro

PS C:\react\react-hook-form-mui-zod> npm install -D @hookform/devtools


--------------------------------------------------------------------------

Traditional input field includes:
    <input
      type='text'
      value={input}
      onChange={(e) => setInput(e.target.value)}
      onBlur={}
      name='userName'
      ref
      disabled={}
      required={}
      maxLength={}
    />

All above can be replaced by register.
  register().max
  register().ref
  register().disabled
  register().onBlur

So a hook form would be like:
  const {
    register,
    formState: { errors },
  } = useForm<{ email: string }>({ mode: 'all' }); // also have a onBlur mode

  return (
    <>
      <input
        {...register('email', {
          required: { value: true, message: 'The email is required' },
          maxLength: { value: 10, message: 'Too many characters' },
        })}
        placeholder='Email'
      />
      <p>{errors.email?.message}</p>
    </>
  );
